{"version":3,"file":"hc-social-triangulation.es5.js","sources":["../src/bindings.ts","../src/graphql/schema.ts","../src/graphql/resolvers.ts","../src/graphql/queries.ts","../src/elements/hcst-agent-list.ts","../src/social-triangulation.module.ts"],"sourcesContent":["export const SocialTriangulationBindings = {\n  SocialTriangulationBindings: \"holochain-social-triangulation-provider\"\n};\n","import gql from 'graphql-tag';\n\nexport const socialTriangulationTypeDefs = gql`\n  extend type Mutation {\n    vouchForAgent(agentId: ID!): Boolean!\n  }\n\n  extend type Agent {\n    numVouches: Int!\n    isInitialMember: Boolean!\n  }\n\n  extend type Query {\n    minVouches: Int!\n  }\n`;\n","import { HolochainProvider } from '@uprtcl/holochain-provider';\n\nimport { SocialTriangulationBindings } from '../bindings';\n\nexport const resolvers = {\n  Mutation: {\n    async vouchForAgent(_, { agentId }, { container }) {\n      const socialTriangulationProvider: HolochainProvider = container.get(\n        SocialTriangulationBindings.SocialTriangulationBindings\n      );\n\n      return socialTriangulationProvider.call('vouch_for', { agent_address: agentId });\n    },\n  },\n  Query: {\n    async minVouches(_, __, { container }) {\n      const socialTriangulationProvider: HolochainProvider = container.get(\n        SocialTriangulationBindings.SocialTriangulationBindings\n      );\n\n      const settings: string = await socialTriangulationProvider.call(\n        'get_setting',\n        {}\n      );\n\n      return settings.split('Minimum_Required_Vouch:')[1];\n    },\n  },\n  Agent: {\n    async isInitialMember(parent, _, { container }) {\n      const socialTriangulationProvider: HolochainProvider = container.get(\n        SocialTriangulationBindings.SocialTriangulationBindings\n      );\n\n      const settings: string = await socialTriangulationProvider.call(\n        'get_setting',\n        {}\n      );\n\n      return settings.includes(parent.id);\n    },\n    async numVouches(parent, _, { container }) {\n      const socialTriangulationProvider: HolochainProvider = container.get(\n        SocialTriangulationBindings.SocialTriangulationBindings\n      );\n\n      const numVouches = await socialTriangulationProvider.call(\n        'vouch_count_for',\n        {\n          agent_address: parent.id,\n        }\n      );\n\n      return parseInt(numVouches);\n    },\n  },\n};\n","import gql from 'graphql-tag';\n\nexport const VOUCH_FOR_AGENT = gql`\n  mutation VouchForAgent($agentId: ID!) {\n    vouchForAgent(agentId: $agentId)\n  }\n`;\n","import { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { LitElement, html, property } from 'lit-element';\nimport { ApolloClient, gql } from 'apollo-boost';\nimport { ApolloClientModule } from '@uprtcl/graphql';\nimport { GET_ALL_AGENTS } from 'holochain-profiles';\n\nimport '@authentic/mwc-circular-progress';\nimport '@material/mwc-list';\nimport '@material/mwc-list/mwc-list-item';\n\nimport { Agent } from '../types';\nimport { VOUCH_FOR_AGENT } from 'src/graphql/queries';\n\nexport class AgentList extends moduleConnect(LitElement) {\n  @property({ type: Array })\n  agents: Agent[] | undefined = undefined;\n\n  client!: ApolloClient<any>;\n\n  async firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n\n    const result = await this.client.query({\n      query: gql`\n        {\n          allAgents {\n            id\n            username\n            numVouches\n          }\n        }\n      `,\n    });\n\n    this.agents = result.data.allAgents;\n  }\n\n  vouchForAgent(agentId: string) {\n    this.client.mutate({\n      mutation: VOUCH_FOR_AGENT,\n      variables: {\n        agentId,\n      },\n    });\n  }\n\n  renderAgent(agent: Agent) {\n    return html`\n      <mwc-list-item twoline hasMeta>\n        <span>${agent.username}</span>\n        <span slot=\"secondary\">${agent.id}</span>\n\n        <mwc-button\n          slot=\"meta\"\n          label=\"VOUCH\"\n          @click=${() => this.vouchForAgent(agent.id)}\n        ></mwc-button>\n      </mwc-list-item>\n      <li divider padded role=\"separator\"></li>\n    `;\n  }\n\n  render() {\n    if (!this.agents)\n      return html`<mwc-circular-progress></mwc-circular-progress>`;\n\n    return html`\n      <mwc-list>\n        ${this.agents.map((agent) => this.renderAgent(agent))}\n      </mwc-list>\n    `;\n  }\n}\n","import { interfaces } from 'inversify';\nimport { GraphQlSchemaModule } from '@uprtcl/graphql';\nimport { MicroModule, i18nextModule } from '@uprtcl/micro-orchestrator';\nimport {\n  HolochainConnectionModule,\n  createHolochainProvider,\n} from '@uprtcl/holochain-provider';\nimport { ProfilesModule } from 'holochain-profiles';\n\nimport en from './i18n/en.json';\nimport { SocialTriangulationBindings } from './bindings';\nimport { socialTriangulationTypeDefs } from './graphql/schema';\nimport { resolvers } from './graphql/resolvers';\nimport { AgentList } from './elements/hcst-agent-list';\n\nexport class SocialTriangulationModule extends MicroModule {\n  static id = 'holochain-social-triangulation-module';\n\n  dependencies = [HolochainConnectionModule.id, ProfilesModule.id];\n\n  static bindings = SocialTriangulationBindings;\n\n  constructor(protected instance: string) {\n    super();\n  }\n\n  async onLoad(container: interfaces.Container) {\n    const socialTriangulationProvider = createHolochainProvider(\n      this.instance,\n      'social-triangulation'\n    );\n\n    container\n      .bind(SocialTriangulationBindings.SocialTriangulationBindings)\n      .to(socialTriangulationProvider);\n\n    customElements.define('hcst-agent-list', AgentList);\n  }\n\n  get submodules() {\n    return [\n      new GraphQlSchemaModule(socialTriangulationTypeDefs, resolvers),\n      new i18nextModule('social-triangulation', { en: en }),\n    ];\n  }\n}\n"],"names":["gql"],"mappings":"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"}