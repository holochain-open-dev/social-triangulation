{"version":3,"file":"hc-social-triangulation.es5.js","sources":["../src/bindings.ts","../src/graphql/schema.ts","../src/graphql/resolvers.ts","../src/graphql/queries.ts","../src/elements/hcst-agent-list.ts","../src/social-triangulation.module.ts"],"sourcesContent":["export const SocialTriangulationBindings = {\n  SocialTriangulationProvider: 'holochain-social-triangulation-provider',\n  RemoteBridgeProvier: 'holochain-remote-bridge-provider',\n  BridgeId: 'holochain-remote-bridge-id',\n  DnaId: 'holochain-social-triangulation-dna-id',\n};\n","import gql from 'graphql-tag';\n\nexport const socialTriangulationTypeDefs = gql`\n  extend type Mutation {\n    vouchForAgent(agentId: ID!): Boolean!\n    joinNetwork(agentId: ID!): Boolean!\n  }\n\n  extend type Agent {\n    vouchesCount: Int!\n    isInitialMember: Boolean!\n  }\n\n  extend type Me {\n    hasJoined: Boolean!\n  }\n\n  extend type Query {\n    minVouches: Int!\n  }\n`;\n","import {\n  HolochainProvider,\n  HolochainConnectionModule,\n  HolochainConnection,\n} from '@uprtcl/holochain-provider';\n\nimport { SocialTriangulationBindings } from '../bindings';\nimport { Container } from 'inversify';\n\nexport const resolvers = {\n  Mutation: {\n    async vouchForAgent(_, { agentId }, { container }) {\n      const socialTriangulationProvider: HolochainProvider = container.get(\n        SocialTriangulationBindings.SocialTriangulationProvider\n      );\n\n      await socialTriangulationProvider.call('vouch_for', {\n        agent_address: agentId,\n      });\n      return true;\n    },\n    async joinNetwork(_, { agentId }, { container }) {\n      const connection: HolochainConnection = container.get(\n        HolochainConnectionModule.bindings.HolochainConnection\n      );\n      const socialTriangulationProvider: HolochainProvider = container.get(\n        SocialTriangulationBindings.SocialTriangulationProvider\n      );\n\n      try {\n        // Just seeing if we already have the social triangulation DNA installed\n        await socialTriangulationProvider.call('get_setting', {});\n      } catch (e) {\n        if (instanceNotValid(e)) {\n          const bridgeId: string = container.get(\n            SocialTriangulationBindings.BridgeId\n          );\n          const dnaId: string = container.get(\n            SocialTriangulationBindings.DnaId\n          );\n          const remoteBridgeProvider: HolochainProvider = container.get(\n            SocialTriangulationBindings.RemoteBridgeProvier\n          );\n\n          const instanceResult = await connection.callAdmin(\n            'admin/instance/add',\n            {\n              id: socialTriangulationProvider.instance,\n              agent_id: agentId,\n              dna_id: dnaId,\n            }\n          );\n          const bridgeResult = await connection.callAdmin('admin/bridge/add', {\n            id: bridgeId,\n            caller_id: remoteBridgeProvider.instance,\n            callee_id: socialTriangulationProvider.instance,\n          });\n          const startResult = await connection.callAdmin(\n            'admin/instance/start',\n            { id: socialTriangulationProvider.instance }\n          );\n\n          await volunteerToBridge(container);\n        } else throw new Error(e);\n      }\n      await volunteerToBridge(container);\n\n      return true;\n    },\n  },\n  Query: {\n    async minVouches(_, __, { container }) {\n      const settings: string = await localOrRemoteCall(\n        container,\n        'get_setting',\n        {}\n      );\n\n      return settings.split('Minimum_Required_Vouch:')[1];\n    },\n  },\n  Me: {\n    async hasJoined(_, __, { container }) {\n      const socialTriangulationProvider: HolochainProvider = container.get(\n        SocialTriangulationBindings.SocialTriangulationProvider\n      );\n\n      try {\n        await socialTriangulationProvider.call('get_setting', {});\n        return true;\n      } catch (e) {\n        if (instanceNotValid(e)) return false;\n        else throw new Error(e);\n      }\n    },\n  },\n  Agent: {\n    async isInitialMember(parent, _, { container }) {\n      const settings: string = await localOrRemoteCall(\n        container,\n        'get_setting',\n        {}\n      );\n\n      return settings.includes(parent.id);\n    },\n    async vouchesCount(parent, _, { container }) {\n      const result = await localOrRemoteCall(container, 'vouch_count_for', {\n        agent_address: parent.id,\n      });\n\n      return parseInt(result);\n    },\n  },\n};\n\nexport function instanceNotValid(error: Error): boolean {\n  return error.message.includes(\n    'instance identifier invalid: PublicInstanceIdentifier'\n  );\n}\n\nexport async function localOrRemoteCall(\n  container: Container,\n  fnName: string,\n  fnArgs: any\n): Promise<any> {\n  const socialTriangulationProvider: HolochainProvider = container.get(\n    SocialTriangulationBindings.SocialTriangulationProvider\n  );\n\n  try {\n    const result = await socialTriangulationProvider.call(fnName, fnArgs);\n    return result;\n  } catch (e) {\n    if (instanceNotValid(e)) {\n      const remoteBridgeProvider: HolochainProvider = container.get(\n        SocialTriangulationBindings.RemoteBridgeProvier\n      );\n      const bridgeId: string = container.get(\n        SocialTriangulationBindings.BridgeId\n      );\n\n      return remoteBridgeProvider.call('request_remote_bridge', {\n        bridge_id: bridgeId,\n        zome_name: 'social-triangulation',\n        cap_token: null,\n        fn_name: fnName,\n        fn_args: JSON.stringify(fnArgs),\n      });\n    } else throw new Error(e);\n  }\n}\n\nasync function volunteerToBridge(container: Container) {\n  const bridgeId: string = container.get(SocialTriangulationBindings.BridgeId);\n\n  const remoteBridgeProvider: HolochainProvider = container.get(\n    SocialTriangulationBindings.RemoteBridgeProvier\n  );\n\n  return remoteBridgeProvider.call('volunteer_to_bridge', {\n    bridge_id: bridgeId,\n  });\n}\n","import gql from 'graphql-tag';\n\nexport const VOUCH_FOR_AGENT = gql`\n  mutation VouchForAgent($agentId: ID!) {\n    vouchForAgent(agentId: $agentId)\n  }\n`;\n\nexport const JOIN_NETWORK = gql`\n  mutation JoinNetwork($agentId: ID!) {\n    joinNetwork(agentId: $agentId)\n  }\n`;\n","import { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { LitElement, html, property, css, query } from 'lit-element';\nimport { ApolloClient, gql } from 'apollo-boost';\nimport { ApolloClientModule } from '@uprtcl/graphql';\n\nimport '@authentic/mwc-circular-progress';\nimport '@material/mwc-list';\nimport '@material/mwc-list/mwc-list-item';\nimport { VouchedAgent } from '../types';\nimport { VOUCH_FOR_AGENT } from '../graphql/queries';\n\nexport class STAgentList extends moduleConnect(LitElement) {\n  @property({ type: Array })\n  me: VouchedAgent | undefined = undefined;\n\n  @property({ type: Array })\n  agents: VouchedAgent[] | undefined = undefined;\n\n  @property({ type: Number })\n  minVouches!: number;\n\n  client!: ApolloClient<any>;\n\n  static get styles() {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n      }\n\n      .fill {\n        flex: 1;\n      }\n\n      .padding {\n        padding: 16px;\n      }\n\n      .center-content {\n        justify-content: center;\n        align-items: center;\n      }\n    `;\n  }\n\n  async firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n\n    const result = await this.client.query({\n      query: gql`\n        {\n          me {\n            id\n            agent {\n              id\n              username\n              vouchesCount\n              isInitialMember\n            }\n          }\n          allAgents {\n            id\n            username\n            vouchesCount\n            isInitialMember\n          }\n          minVouches\n        }\n      `,\n      fetchPolicy: 'network-only',\n    });\n\n    this.agents = result.data.allAgents;\n    this.me = result.data.me;\n    this.minVouches = result.data.minVouches;\n  }\n\n  isAllowed(agent: VouchedAgent) {\n    return agent.isInitialMember || agent.vouchesCount >= this.minVouches;\n  }\n\n  vouchForAgent(agentId: string) {\n    this.client.mutate({\n      mutation: VOUCH_FOR_AGENT,\n      variables: {\n        agentId,\n      },\n    });\n  }\n\n  renderAgent(agent: VouchedAgent) {\n    return html`\n      <div class=\"row\" style=\"align-items: center;\">\n        <mwc-list-item style=\"flex: 1;\" twoline noninteractive>\n          <span>${agent.username}</span>\n          <span slot=\"secondary\">${agent.id}</span>\n        </mwc-list-item>\n\n        <span style=\"margin-right: 16px;\">\n          ${agent.isInitialMember\n            ? 'Initial member'\n            : `Vouch count: ${agent.vouchesCount}`}\n        </span>\n        ${!this.isAllowed(agent)\n          ? html`<mwc-button\n              style=\"padding-right: 16px;\"\n              label=\"VOUCH\"\n              @click=${() => this.vouchForAgent(agent.id)}\n            ></mwc-button>`\n          : html``}\n      </div>\n    `;\n  }\n\n  render() {\n    if (!this.agents)\n      return html`<div class=\"padding center-content row fill\">\n        <mwc-circular-progress></mwc-circular-progress>\n      </div>`;\n\n    if (this.agents.length === 0)\n      return html`<span>There are no registered agents in this network</span>`;\n\n    return html`\n      <mwc-list>\n        ${this.agents.map(\n          (agent, i) => html`${this.renderAgent(agent)}\n          ${this.agents && i < this.agents.length - 1\n            ? html`<li divider padded role=\"separator\"></li> `\n            : html``} `\n        )}\n      </mwc-list>\n    `;\n  }\n}\n","import { interfaces } from 'inversify';\nimport { GraphQlSchemaModule } from '@uprtcl/graphql';\nimport { MicroModule, i18nextModule } from '@uprtcl/micro-orchestrator';\nimport {\n  HolochainConnectionModule,\n  createHolochainProvider,\n} from '@uprtcl/holochain-provider';\nimport { ProfilesModule } from 'holochain-profiles';\n\nimport en from './i18n/en.json';\nimport { SocialTriangulationBindings } from './bindings';\nimport { socialTriangulationTypeDefs } from './graphql/schema';\nimport { resolvers } from './graphql/resolvers';\nimport { STAgentList } from './elements/hcst-agent-list';\n\nexport class SocialTriangulationModule extends MicroModule {\n  static id = 'holochain-social-triangulation-module';\n\n  dependencies = [HolochainConnectionModule.id, ProfilesModule.id];\n\n  static bindings = SocialTriangulationBindings;\n\n  constructor(\n    protected instance: string,\n    protected dnaId: string,\n    protected lobbyInstance: string,\n    protected bridgeId: string\n  ) {\n    super();\n  }\n\n  async onLoad(container: interfaces.Container) {\n    const socialTriangulationProvider = createHolochainProvider(\n      this.instance,\n      'social-triangulation'\n    );\n    const lobbyProvider = createHolochainProvider(\n      this.lobbyInstance,\n      'remote-bridge'\n    );\n\n    container\n      .bind(SocialTriangulationBindings.SocialTriangulationProvider)\n      .to(socialTriangulationProvider);\n      container\n      .bind(SocialTriangulationBindings.DnaId)\n      .toConstantValue(this.dnaId);\n      container\n      .bind(SocialTriangulationBindings.BridgeId)\n      .toConstantValue(this.bridgeId);\n    container\n      .bind(SocialTriangulationBindings.RemoteBridgeProvier)\n      .to(lobbyProvider);\n\n    customElements.define('hcst-agent-list', STAgentList);\n  }\n\n  get submodules() {\n    return [\n      new GraphQlSchemaModule(socialTriangulationTypeDefs, resolvers),\n      new i18nextModule('social-triangulation', { en: en }),\n    ];\n  }\n}\n"],"names":["gql"],"mappings":"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"}