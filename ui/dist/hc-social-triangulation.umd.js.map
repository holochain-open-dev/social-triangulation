{"version":3,"file":"hc-social-triangulation.umd.js","sources":["../src/bindings.ts","../src/graphql/schema.ts","../src/graphql/resolvers.ts","../src/elements/hcst-agent-list.ts","../src/social-triangulation.module.ts","../src/graphql/queries.ts"],"sourcesContent":["export const SocialTriangulationBindings = {\n  SocialTriangulationBindings: \"holochain-social-triangulation-provider\"\n};\n","import gql from 'graphql-tag';\n\nexport const socialTriangulationTypeDefs = gql`\n  extend type Mutation {\n    vouchForAgent(agentId: ID!): Boolean!\n  }\n`;\n","import { HolochainProvider } from '@uprtcl/holochain-provider';\n\nimport { SocialTriangulationBindings } from '../bindings';\n\nexport const resolvers = {\n  Mutation: {\n    async vouchForAgent(_, { agentId }, { container }) {\n      const socialTriangulationProvider: HolochainProvider = container.get(\n        SocialTriangulationBindings.SocialTriangulationBindings\n      );\n\n      return socialTriangulationProvider.call('vouch_for_agent', { agentId });\n    },\n  },\n};\n","import { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { LitElement, html, property } from 'lit-element';\nimport { ApolloClient } from 'apollo-boost';\nimport { ApolloClientModule } from '@uprtcl/graphql';\nimport { GET_ALL_AGENTS } from 'holochain-profiles';\n\nimport '@authentic/mwc-circular-progress';\nimport '@material/mwc-list';\nimport '@material/mwc-list/mwc-list-item';\n\nimport { Agent } from '../types';\n\nexport class AgentList extends moduleConnect(LitElement) {\n  @property({ type: Array })\n  agents: Agent[] | undefined = undefined;\n\n  client!: ApolloClient<any>;\n\n  async firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n\n    const result = await this.client.query({\n      query: GET_ALL_AGENTS,\n    });\n\n    this.agents = result.data.allAgents;\n  }\n\n  renderAgent(agent: Agent) {\n    return html`<mwc-list-item>${agent.username}</mwc-list-item>`;\n  }\n\n  render() {\n    if (!this.agents)\n      return html`<mwc-circular-progress></mwc-circular-progress>`;\n\n    return html`\n      <mwc-list>\n        ${this.agents.map((agent) => this.renderAgent(agent))}\n      </mwc-list>\n    `;\n  }\n}\n","import { interfaces } from 'inversify';\nimport { GraphQlSchemaModule } from '@uprtcl/graphql';\nimport { MicroModule, i18nextModule } from '@uprtcl/micro-orchestrator';\nimport {\n  HolochainConnectionModule,\n  createHolochainProvider,\n} from '@uprtcl/holochain-provider';\nimport { ProfilesModule } from 'holochain-profiles';\n\nimport en from './i18n/en.json';\nimport { SocialTriangulationBindings } from './bindings';\nimport { socialTriangulationTypeDefs } from './graphql/schema';\nimport { resolvers } from './graphql/resolvers';\nimport { AgentList } from './elements/hcst-agent-list';\n\nexport class SocialTriangulationModule extends MicroModule {\n  static id = 'holochain-social-triangulation-module';\n\n  dependencies = [HolochainConnectionModule.id, ProfilesModule.id];\n\n  static bindings = SocialTriangulationBindings;\n\n  constructor(protected instance: string) {\n    super();\n  }\n\n  async onLoad(container: interfaces.Container) {\n    const socialTriangulationProvider = createHolochainProvider(\n      this.instance,\n      'social-triangulation'\n    );\n\n    container\n      .bind(SocialTriangulationBindings.SocialTriangulationBindings)\n      .to(socialTriangulationProvider);\n\n    customElements.define('hcst-agent-list', AgentList);\n  }\n\n  get submodules() {\n    return [\n      new GraphQlSchemaModule(socialTriangulationTypeDefs, resolvers),\n      new i18nextModule('social-triangulation', { en: en }),\n    ];\n  }\n}\n","import gql from 'graphql-tag';\n\nexport const VOUCH_FOR_AGENT = gql`\n  mutation VouchForAgent($agentId: ID!) {\n    vouchForAgent(agentId: $agentId)\n  }\n`;\n"],"names":["moduleConnect","LitElement","ApolloClientModule","GET_ALL_AGENTS","html","property","MicroModule","HolochainConnectionModule","ProfilesModule","createHolochainProvider","GraphQlSchemaModule","i18nextModule"],"mappings":";;;;;;;;;;;;EAAO,MAAM,2BAA2B,GAAG;MACzC,2BAA2B,EAAE,yCAAyC;GACvE,CAAC;;ECAK,MAAM,2BAA2B,GAAG,GAAG,CAAA;;;;CAI7C,CAAC;;ECFK,MAAM,SAAS,GAAG;MACvB,QAAQ,EAAE;UACR,MAAM,aAAa,CAAC,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE;cAC/C,MAAM,2BAA2B,GAAsB,SAAS,CAAC,GAAG,CAClE,2BAA2B,CAAC,2BAA2B,CACxD,CAAC;cAEF,OAAO,2BAA2B,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC;WACzE;OACF;GACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCFW,SAAU,SAAQA,+BAAa,CAACC,qBAAU,CAAC;MAAxD;;UAEE,WAAM,GAAwB,SAAS,CAAC;OA4BzC;MAxBC,MAAM,YAAY;UAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAACC,0BAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;UAE/D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;cACrC,KAAK,EAAEC,gCAAc;WACtB,CAAC,CAAC;UAEH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;OACrC;MAED,WAAW,CAAC,KAAY;UACtB,OAAOC,eAAI,CAAA,kBAAkB,KAAK,CAAC,QAAQ,kBAAkB,CAAC;OAC/D;MAED,MAAM;UACJ,IAAI,CAAC,IAAI,CAAC,MAAM;cACd,OAAOA,eAAI,CAAA,iDAAiD,CAAC;UAE/D,OAAOA,eAAI,CAAA;;UAEL,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;;KAExD,CAAC;OACH;GACF;EA5BC;MADCC,mBAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;;2CACc;;QCC7B,yBAA0B,SAAQC,6BAAW;MAOxD,YAAsB,QAAgB;UACpC,KAAK,EAAE,CAAC;UADY,aAAQ,GAAR,QAAQ,CAAQ;UAJtC,iBAAY,GAAG,CAACC,2CAAyB,CAAC,EAAE,EAAEC,gCAAc,CAAC,EAAE,CAAC,CAAC;OAMhE;MAED,MAAM,MAAM,CAAC,SAA+B;UAC1C,MAAM,2BAA2B,GAAGC,yCAAuB,CACzD,IAAI,CAAC,QAAQ,EACb,sBAAsB,CACvB,CAAC;UAEF,SAAS;eACN,IAAI,CAAC,2BAA2B,CAAC,2BAA2B,CAAC;eAC7D,EAAE,CAAC,2BAA2B,CAAC,CAAC;UAEnC,cAAc,CAAC,MAAM,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;OACrD;MAED,IAAI,UAAU;UACZ,OAAO;cACL,IAAIC,2BAAmB,CAAC,2BAA2B,EAAE,SAAS,CAAC;cAC/D,IAAIC,+BAAa,CAAC,sBAAsB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;WACtD,CAAC;OACH;;EA5BM,4BAAE,GAAG,uCAAuC,CAAC;EAI7C,kCAAQ,GAAG,2BAA2B,CAAC;;QClBnC,eAAe,GAAG,GAAG,CAAA;;;;CAIjC;;;;;;;;;;;;;"}